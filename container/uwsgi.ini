[app:main]
use = egg:mist.core

[uwsgi]
directory = /mist.core
chdir = /mist.core
buffer-size = 32768
harakiri = 600
vacuum = true
no-orphans = true
single-interpreter = true
master = true
cpu-affinity = 1
die-on-term = true
max-requests = 1000
enable-threads = true
http-timeout = 600
socket-timeout = 600
honour-stdin = true
# set cheaper algorithm to use, if not set default will be used
cheaper-algo = spare
# minimum number of workers to keep at all times
cheaper = 8
# number of workers to spawn at startup
# this only makes sense if > cheaper
cheaper-initial = 16
# maximum number of workers that can be spawned
workers = 32
# how many workers should be spawned at a time
#
cheaper-step = 2
# if all workers are busy for this many seconds, spawn new processes
cheaper-overload = 1


# Begin logging configuration

[loggers]
keys = root, mist.core, mist.io, mist.shell

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_mist.core]
level = INFO
handlers =
qualname = mist.core

[logger_mist.io]
level = INFO
handlers =
qualname = mist.io

[logger_mist.shell]
level = INFO
handlers = console
qualname = mist.shell

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
